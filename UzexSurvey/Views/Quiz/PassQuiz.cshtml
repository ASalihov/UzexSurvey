@using DAL.Entities
@model DAL.ViewModels.QuizViewModel

@{
    ViewBag.Title = "PassQuiz";
}

<h2>@Model.Name</h2>

@using (@Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Name)
    @Html.DisplayFor(model => model.Description)
    @Html.HiddenFor(model => model.Description)

    <div class="list-group">
        @for (int i = 0; i < Model.Questions.Count; i++)
        {
            <div class="list-group-item list-group-question">
                <h4>@Html.DisplayFor(model => model.Questions[i].Text)</h4>
                @Html.HiddenFor(model => model.Questions[i].Id)
                @Html.HiddenFor(model => model.Questions[i].Type)
                @Html.HiddenFor(model => model.Questions[i].QuizId)

                @if (Model.Questions[i].Type == DAL.Entities.QuestionType.radio)
                {
                    <ul class="simple-list">
                        @Html.ValidationMessageFor(model => model.Questions[i].SelectedOption, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Questions[i].TextAnswer, new { id = "TextAnswer", @Value = "" })
                        

                        @for (int j = 0; j < Model.Questions[i].Options.Count(); j++)
                        {
                            var option = Model.Questions[i].Options[j];
                            @Html.HiddenFor(model => model.Questions[i].Options[j].QuestionId)
                            @Html.HiddenFor(model => model.Questions[i].Options[j].QuizId)

                            <li class="list-group-item">
                                @Html.RadioButtonFor(model => model.Questions[i].SelectedOption, option.Id, new { id = option.Id, questionId = i })
                                @{Html.RenderAction("GetPartialByOptionType", new { vm = Model, questionId = i, optionId = j });}
                            </li>
                        }
                    </ul>
                }
                else if (Model.Questions[i].Type == DAL.Entities.QuestionType.ckeckbox)
                {
                    @Html.HiddenFor(model => model.Questions[i].SelectedOption, new { id = "SelectedOption", @Value = 0 })
                    @Html.HiddenFor(model => model.Questions[i].TextAnswer, new { id = "TextAnswer", @Value = "" })
                     //c
                    <ul class="simple-list">


                        @for (int j = 0; j < Model.Questions[i].Options.Count(); j++)
                        {

                            @Html.HiddenFor(model => model.Questions[i].Options[j].Id)
                            @Html.HiddenFor(model => model.Questions[i].Options[j].QuestionId)
                            @Html.HiddenFor(model => model.Questions[i].Options[j].QuizId)
                            <li class="list-group-item">
                                @Html.CheckBoxFor(model => model.Questions[i].Options[j].Selected, Model.Questions[i].Options[j].Name)
                                @*@Html.CheckBoxFor(model => model.Questions[i].Options[j].Selected, new { Model.Questions[i].Options[j].Name, @class = "required-checkbox" })*@
                                @Html.DisplayFor(model => model.Questions[i].Options[j].Name)
                            </li>
                        }
                    </ul>
                }
                else
                {
                    @Html.HiddenFor(model => model.Questions[i].SelectedOption, new { id = "SelectedOption", @Value = 0 })

                    <ul class="simple-list">         
                        @Html.ValidationMessageFor(model => model.Questions[i].TextAnswer, "", new { @class = "text-danger" })
                        <li class="list-group-item">
                            @Html.TextAreaFor(model => model.Questions[i].TextAnswer)
                        </li>
                    </ul>
                }

            </div>
        }

        <div class="form-group">
            <div>
                <input type="submit" value="Save" class="btn btn-success navbar-left" />
            </div>
            <p class="clearfix"></p>
        </div>

    </div>
}

@Scripts.Render("~/Scripts/Custom.js")
<script type="text/javascript">
    $(function () {
        $.validator.unobtrusive.parse(".form-horizontal");
    })
</script>